[
{
	"uri": "https://growthings.netlify.com/unit2/lesson10/",
	"title": "Lesson10",
	"tags": [],
	"description": "",
	"content": " Lesson Information A paragraph that explains the purpose and contents of the lesson\n Highlights\nComputational Thinking Skills  Skill 1: description Skill 2: description  CSTA Computer Science Standards  number: description number: description  Cross-discipline Applications  A brief description of how this lesson could be helpful for other disciplines  Duration X hour\n The purpose of the lesson is to:  Purpose 1 Purpose 2 Purpose 3 Purpose 4  Driving Questions:  Question 1 Question 2 Question 3 Question 4  Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Computer Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Materials Needed:  An indented paragraph with all the materials needed, separated by commas\n Target Skills:  SWBAT 1 SWBAT 2 SWBAT 3  Instructional Plan and Structure Paragraphs are separated by empty lines. Use bold and italics to highlight important concepts within regular texts. Hyperlinks can be added this way. Separate code from regular texts with inline code. Images look like this:\n unordered lists item 1 unordered lists item 1 unordered lists item 1   ordered list item 1 ordered list item 2 ordered list item 3  If you want to write a block of Python code, use the following syntax:\nfrom sensors import LightSensor ls = LightSensor(port=6) ls.get_lux()  Please check this page for more references. Feel free to use SlackEdit to edit your markdown documents.\nOverview of the lesson (xx minutes) Activity 1 (xx minutes) Activity 2 (xx minutes) Activity 3 (xx minutes) Review and Assessment "
},
{
	"uri": "https://growthings.netlify.com/unit2/lesson9/",
	"title": "Lesson9",
	"tags": [],
	"description": "",
	"content": " Lesson Information A paragraph that explains the purpose and contents of the lesson\n Highlights\nComputational Thinking Skills  Skill 1: description Skill 2: description  CSTA Computer Science Standards  number: description number: description  Cross-discipline Applications  A brief description of how this lesson could be helpful for other disciplines  Duration X hour\n The purpose of the lesson is to:  Purpose 1 Purpose 2 Purpose 3 Purpose 4  Driving Questions:  Question 1 Question 2 Question 3 Question 4  Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Computer Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Materials Needed:  An indented paragraph with all the materials needed, separated by commas\n Target Skills:  SWBAT 1 SWBAT 2 SWBAT 3  Instructional Plan and Structure Paragraphs are separated by empty lines. Use bold and italics to highlight important concepts within regular texts. Hyperlinks can be added this way. Separate code from regular texts with inline code. Images look like this:\n unordered lists item 1 unordered lists item 1 unordered lists item 1   ordered list item 1 ordered list item 2 ordered list item 3  If you want to write a block of Python code, use the following syntax:\nfrom sensors import LightSensor ls = LightSensor(port=6) ls.get_lux()  Please check this page for more references. Feel free to use SlackEdit to edit your markdown documents.\nOverview of the lesson (xx minutes) Activity 1 (xx minutes) Activity 2 (xx minutes) Activity 3 (xx minutes) Review and Assessment "
},
{
	"uri": "https://growthings.netlify.com/unit2/lesson8/",
	"title": "Lesson8",
	"tags": [],
	"description": "",
	"content": " Lesson Information A paragraph that explains the purpose and contents of the lesson\n Highlights\nComputational Thinking Skills  Skill 1: description Skill 2: description  CSTA Computer Science Standards  number: description number: description  Cross-discipline Applications  A brief description of how this lesson could be helpful for other disciplines  Duration X hour\n The purpose of the lesson is to:  Purpose 1 Purpose 2 Purpose 3 Purpose 4  Driving Questions:  Question 1 Question 2 Question 3 Question 4  Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Computer Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Materials Needed:  An indented paragraph with all the materials needed, separated by commas\n Target Skills:  SWBAT 1 SWBAT 2 SWBAT 3  Instructional Plan and Structure Paragraphs are separated by empty lines. Use bold and italics to highlight important concepts within regular texts. Hyperlinks can be added this way. Separate code from regular texts with inline code. Images look like this:\n unordered lists item 1 unordered lists item 1 unordered lists item 1   ordered list item 1 ordered list item 2 ordered list item 3  If you want to write a block of Python code, use the following syntax:\nfrom sensors import LightSensor ls = LightSensor(port=6) ls.get_lux()  Please check this page for more references. Feel free to use SlackEdit to edit your markdown documents.\nOverview of the lesson (xx minutes) Activity 1 (xx minutes) Activity 2 (xx minutes) Activity 3 (xx minutes) Review and Assessment "
},
{
	"uri": "https://growthings.netlify.com/unit2/lesson7/",
	"title": "Lesson7",
	"tags": [],
	"description": "",
	"content": " Lesson Information A paragraph that explains the purpose and contents of the lesson\n Highlights\nComputational Thinking Skills  Skill 1: description Skill 2: description  CSTA Computer Science Standards  number: description number: description  Cross-discipline Applications  A brief description of how this lesson could be helpful for other disciplines  Duration X hour\n The purpose of the lesson is to:  Purpose 1 Purpose 2 Purpose 3 Purpose 4  Driving Questions:  Question 1 Question 2 Question 3 Question 4  Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Computer Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Materials Needed:  An indented paragraph with all the materials needed, separated by commas\n Target Skills:  SWBAT 1 SWBAT 2 SWBAT 3  Instructional Plan and Structure Paragraphs are separated by empty lines. Use bold and italics to highlight important concepts within regular texts. Hyperlinks can be added this way. Separate code from regular texts with inline code. Images look like this:\n unordered lists item 1 unordered lists item 1 unordered lists item 1   ordered list item 1 ordered list item 2 ordered list item 3  If you want to write a block of Python code, use the following syntax:\nfrom sensors import LightSensor ls = LightSensor(port=6) ls.get_lux()  Please check this page for more references. Feel free to use SlackEdit to edit your markdown documents.\nOverview of the lesson (xx minutes) Activity 1 (xx minutes) Activity 2 (xx minutes) Activity 3 (xx minutes) Review and Assessment "
},
{
	"uri": "https://growthings.netlify.com/unit2/lesson6/",
	"title": "Lesson6",
	"tags": [],
	"description": "",
	"content": " Lesson Information A paragraph that explains the purpose and contents of the lesson\n Highlights\nComputational Thinking Skills  Skill 1: description Skill 2: description  CSTA Computer Science Standards  number: description number: description  Cross-discipline Applications  A brief description of how this lesson could be helpful for other disciplines  Duration X hour\n The purpose of the lesson is to:  Purpose 1 Purpose 2 Purpose 3 Purpose 4  Driving Questions:  Question 1 Question 2 Question 3 Question 4  Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Computer Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Materials Needed:  An indented paragraph with all the materials needed, separated by commas\n Target Skills:  SWBAT 1 SWBAT 2 SWBAT 3  Instructional Plan and Structure Paragraphs are separated by empty lines. Use bold and italics to highlight important concepts within regular texts. Hyperlinks can be added this way. Separate code from regular texts with inline code. Images look like this:\n unordered lists item 1 unordered lists item 1 unordered lists item 1   ordered list item 1 ordered list item 2 ordered list item 3  If you want to write a block of Python code, use the following syntax:\nfrom sensors import LightSensor ls = LightSensor(port=6) ls.get_lux()  Please check this page for more references. Feel free to use SlackEdit to edit your markdown documents.\nOverview of the lesson (xx minutes) Activity 1 (xx minutes) Activity 2 (xx minutes) Activity 3 (xx minutes) Review and Assessment "
},
{
	"uri": "https://growthings.netlify.com/unit1/lesson5/",
	"title": "Lesson5",
	"tags": [],
	"description": "",
	"content": " Lesson Information A paragraph that explains the purpose and contents of the lesson\n Highlights\nComputational Thinking Skills  Skill 1: description Skill 2: description  CSTA Computer Science Standards  number: description number: description  Cross-discipline Applications  A brief description of how this lesson could be helpful for other disciplines  Duration X hour\n The purpose of the lesson is to:  Purpose 1 Purpose 2 Purpose 3 Purpose 4  Driving Questions:  Question 1 Question 2 Question 3 Question 4  Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Computer Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Materials Needed:  An indented paragraph with all the materials needed, separated by commas\n Target Skills:  SWBAT 1 SWBAT 2 SWBAT 3  Instructional Plan and Structure Paragraphs are separated by empty lines. Use bold and italics to highlight important concepts within regular texts. Hyperlinks can be added this way. Separate code from regular texts with inline code. Images look like this:\n unordered lists item 1 unordered lists item 1 unordered lists item 1   ordered list item 1 ordered list item 2 ordered list item 3  If you want to write a block of Python code, use the following syntax:\nfrom sensors import LightSensor ls = LightSensor(port=6) ls.get_lux()  Please check this page for more references. Feel free to use SlackEdit to edit your markdown documents.\nOverview of the lesson (xx minutes) Activity 1 (xx minutes) Activity 2 (xx minutes) Activity 3 (xx minutes) Review and Assessment "
},
{
	"uri": "https://growthings.netlify.com/unit1/lesson4/",
	"title": "Lesson4",
	"tags": [],
	"description": "",
	"content": " Lesson Information A paragraph that explains the purpose and contents of the lesson\n Highlights\nComputational Thinking Skills  Skill 1: description Skill 2: description  CSTA Computer Science Standards  number: description number: description  Cross-discipline Applications  A brief description of how this lesson could be helpful for other disciplines  Duration X hour\n The purpose of the lesson is to:  Purpose 1 Purpose 2 Purpose 3 Purpose 4  Driving Questions:  Question 1 Question 2 Question 3 Question 4  Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Computer Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Materials Needed:  An indented paragraph with all the materials needed, separated by commas\n Target Skills:  SWBAT 1 SWBAT 2 SWBAT 3  Instructional Plan and Structure Paragraphs are separated by empty lines. Use bold and italics to highlight important concepts within regular texts. Hyperlinks can be added this way. Separate code from regular texts with inline code. Images look like this:\n unordered lists item 1 unordered lists item 1 unordered lists item 1   ordered list item 1 ordered list item 2 ordered list item 3  If you want to write a block of Python code, use the following syntax:\nfrom sensors import LightSensor ls = LightSensor(port=6) ls.get_lux()  Please check this page for more references. Feel free to use SlackEdit to edit your markdown documents.\nOverview of the lesson (xx minutes) Activity 1 (xx minutes) Activity 2 (xx minutes) Activity 3 (xx minutes) Review and Assessment "
},
{
	"uri": "https://growthings.netlify.com/unit1/lesson3/",
	"title": "Lesson3",
	"tags": [],
	"description": "",
	"content": " Lesson Information A paragraph that explains the purpose and contents of the lesson\n Highlights\nComputational Thinking Skills  Skill 1: description Skill 2: description  CSTA Computer Science Standards  number: description number: description  Cross-discipline Applications  A brief description of how this lesson could be helpful for other disciplines  Duration X hour\n The purpose of the lesson is to:  Purpose 1 Purpose 2 Purpose 3 Purpose 4  Driving Questions:  Question 1 Question 2 Question 3 Question 4  Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Computer Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Materials Needed:  An indented paragraph with all the materials needed, separated by commas\n Target Skills:  SWBAT 1 SWBAT 2 SWBAT 3  Instructional Plan and Structure Paragraphs are separated by empty lines. Use bold and italics to highlight important concepts within regular texts. Hyperlinks can be added this way. Separate code from regular texts with inline code. Images look like this:\n unordered lists item 1 unordered lists item 1 unordered lists item 1   ordered list item 1 ordered list item 2 ordered list item 3  If you want to write a block of Python code, use the following syntax:\nfrom sensors import LightSensor ls = LightSensor(port=6) ls.get_lux()  Please check this page for more references. Feel free to use SlackEdit to edit your markdown documents.\nOverview of the lesson (xx minutes) Activity 1 (xx minutes) Activity 2 (xx minutes) Activity 3 (xx minutes) Review and Assessment "
},
{
	"uri": "https://growthings.netlify.com/unit1/lesson2/",
	"title": "Lesson2",
	"tags": [],
	"description": "",
	"content": " Lesson Information A paragraph that explains the purpose and contents of the lesson\n Highlights\nComputational Thinking Skills  Skill 1: description Skill 2: description  CSTA Computer Science Standards  number: description number: description  Cross-discipline Applications  A brief description of how this lesson could be helpful for other disciplines  Duration X hour\n The purpose of the lesson is to:  Purpose 1 Purpose 2 Purpose 3 Purpose 4  Driving Questions:  Question 1 Question 2 Question 3 Question 4  Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Computer Science Concepts:  Vocabulary: brief description Vocabulary: brief description Vocabulary: brief description  Materials Needed:  An indented paragraph with all the materials needed, separated by commas\n Target Skills:  SWBAT 1 SWBAT 2 SWBAT 3  Instructional Plan and Structure Paragraphs are separated by empty lines. Use bold and italics to highlight important concepts within regular texts. Hyperlinks can be added this way. Separate code from regular texts with inline code. Images look like this:\n unordered lists item 1 unordered lists item 1 unordered lists item 1   ordered list item 1 ordered list item 2 ordered list item 3  If you want to write a block of Python code, use the following syntax:\nfrom sensors import LightSensor ls = LightSensor(port=6) ls.get_lux()  Please check this page for more references. Feel free to use SlackEdit to edit your markdown documents.\nOverview of the lesson (xx minutes) Activity 1 (xx minutes) Activity 2 (xx minutes) Activity 3 (xx minutes) Review and Assessment "
},
{
	"uri": "https://growthings.netlify.com/unit1/lesson1/",
	"title": "Course Overview and Intro to Python",
	"tags": [],
	"description": "",
	"content": " Lesson Information This lesson is an overview of the structure of the course. The students will see what a table-top smart greenhouse looks like, and learn what they will need to get it to work. By the end of the lesson, the students will know what a micro-controller is and have some basic experience programming with Python.\n Highlights\nComputational Thinking Skills  Automation: Analysis: Debugging  Interdisciplinary Application  The ability to solve problems independently is applicable to all other disciplines.  Duration  50 minutes   The purpose of the lesson is to:  Overview the goal and logistics of the course Walk students through the hardware and software systems that they will use in the course Establish expectations for the course  Driving Questions:  What is a smart device? What do greenhouses do? What is a micro-controller? What is Python and why are we learning it?  Science Concepts:   Computer Science Concepts:  micro-controllers, computing, programming languages, operating systems\n Materials Needed  A fully functional smart greenhouse for demonstration, smart greenhouse kits for each pair of students\n Target Skills  SWBAT talk about what a micro-controller is and its difference from micro-computer SWBAT do simple and advanced math in the terminal SWBAT articulate what is to expect when they are coding and what qualities are required to become good coders  Instructional Plan and Structure Do now! (15 minutes) Set up a fully functional smart greenhouse before class. As students come in, invite them to take a look at the smart greenhouse and explore what it can do and how it does it. Encourage the students to guess which part does what.\nAs the students get settled, ask them to discuss in pairs these two questions:\n What does a greenhouse do? What can we do to make a greenhouse smart? What do we need?  Have the students share their ideas.\nExplain to the students that their final project is to build a smart greenhouse themselves. Here are the expectations:\n Use at least one type of plant Use at least 1 sensor to automatically control another device Upload the data to a server  By the end of the course, they could also choose to bring the smart greenhouse home to continue taking care of their plants.\nHardware and software environment (15 minutes) Introduce to the students that they are going to build the smart greenhouse by programming a micro-controller (MCU). Show them the Wio Link board that they will be programming. Explain that a MCU is like a computer. The biggest difference is that MCUs do not have an operating system (ask the students what they know about operating systems), so they can be made much smaller and cheaper. We can directly program the computer on the board to control other devices, such as sensors. After this, walk the students through the usb ports, configuration and reset buttons, battery ports, the LED indicators, and the 6 ports we will be programming with.\nNow demonstrate to the students the EsPy program that they are going to be using. Walk them through how to connect the Wio Link board to the computer, find the port in EsPy, and get it ready to program in EsPy.\nSince MCUs are computers, we can use them as sophisticated calculators. Within the terminal, start typing in basic math operations, such as5 + 10 and 1.2-1.0. Addition and subtraction might be easy, but some students might not be familiar with the multiplication * operator, the division / operator, and/or the exponentiation operator **. Make sure they locate these operators on the keyboard. The exponentiation operator can be used to obtain really large numbers, which Python handles well. Make sure the students have the chance to experience that.\nIt does NOT matter if there are spaces, or even multiple between values and operators.\n\rHere are the basic mathematical operators in Python:\n   Python operator Mathematical Operator     a + b \\(a+b\\)   a - b \\(a-b\\)   a * b \\(a \\times b\\)   a / b \\(a \\div b\\)   a ** b \\(a^b\\)    It is possible to carry out complicated operations, such as square roots and trigonometry. In order to do that, we will need to type in import math in the terminal. Notice that import becomes blue, which means that this word has special meaning in Python.\nSmartphones only come with basic functionalities, such as connecting to WiFi, text messages, etc. Apps will expand the functionalities of smartphones. Python works the same way. Base Python offers only basic functionalities. We will need extra modules to do more sophisticated things. Before we use these modules, we will need to import them.\n\rNow, use math.sqrt(625) and see what happens. Explain to the students that sqrt() is a function. Ask the students to compare the similarities of this notation with a function that they know in math. The dot notation tells Python to look for this function in the math module, which works like a folder. A lot of mathematical functions are organized within the math folder. Also introduce from math import sqrt to avoid writing math. over and over again.\nFree coding and challenges (15 minutes)  Connect the MCU to the computer and start programming Within the terminal, perform addition, subtraction, multiplication, division, and exponentiation. Try division by zero Use the math module to perform square roots Perform trigonometric operations in the terminal as well, such as sin, cos, and tan  What makes a good programmer (coder)? (5 minutes) Have the students discuss the following question:\n What makes a good coder/programmer?  Explain to the students that we will be answering these questions throughout the course. We will revisit these questions at the end of the course and see if their ideas will change. When discussing Question 3, highlight the idea that the most important quality of a good coder is not intelligence, but resiliency. Codes don\u0026rsquo;t work 99% of the time, and it is important that they don\u0026rsquo;t give up.\nReview and Assessment An exit slip (or Google classroom) with the following questions:\n What do greenhouses do? What makes a good coder? What is a module in Python and how to use them?  "
},
{
	"uri": "https://growthings.netlify.com/unit1/",
	"title": "Introduction to Programming Sensors",
	"tags": [],
	"description": "",
	"content": " Week 1 Introduction to Programming Sensors with MicroPython The focus of this first unit is to familiarize students with basic skills of programming sensors in (Micro)Python. They will be introduced to the concept of a micro-controller and learn its difference from other computers. They will learn how to program sensors using fundamental concepts in Object-Oriented Programming and become familiar with the concept of data - what is data, why we need data, and what they can do with data.\n"
},
{
	"uri": "https://growthings.netlify.com/unit2/",
	"title": "Lesson Plans",
	"tags": [],
	"description": "",
	"content": " Chapter X Some Chapter title Lorem Ipsum.\n"
},
{
	"uri": "https://growthings.netlify.com/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " GrowThings Smart Greenhouse This is the website for the curriculum of the GrowThings Smart Greenhouse. Please use the navigation on the left to see individual lessons.\n"
},
{
	"uri": "https://growthings.netlify.com/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://growthings.netlify.com/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]